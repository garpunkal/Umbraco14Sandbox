{"version":3,"file":"assets.js","sources":["../../../../Umbraco14Sandbox.Client/assets/src/dashboards/manifest.ts","../../../../Umbraco14Sandbox.Client/assets/src/propertyEditors/manifest.ts","../../../../Umbraco14Sandbox.Client/assets/src/index.ts"],"sourcesContent":["import type { ManifestDashboard } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst dashboards: Array<ManifestDashboard> = [\r\n    {\r\n        type: 'dashboard',\r\n        name: 'Punk.Dashboard',\r\n        alias: 'punk.dashboard',\r\n        elementName: 'punk-dashboard',\r\n        js: ()=> import('./dashboard.element.js'),\r\n        weight: -10,\r\n        meta: {\r\n            label: 'Punk Dashboard',\r\n            pathname: 'punk-dashboard'\r\n        },\r\n        conditions: [\r\n            {\r\n                alias: 'Umb.Condition.SectionAlias',\r\n                match: 'Umb.Section.Content'\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const manifests = [...dashboards];","import type { ManifestPropertyEditorUi } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst propertyEditors: Array<ManifestPropertyEditorUi> = [\r\n    {\r\n        type: 'propertyEditorUi',\r\n        name: 'Punk.Suggestions',\r\n        alias: 'punk.suggestions',\r\n        elementName: 'punk-suggestions',\r\n        js: () => import('./suggestions.element.js'),\r\n        meta: {\r\n            label: \"Suggestions\",\r\n            icon: \"icon-list\",\r\n            group: \"common\",\r\n            propertyEditorSchemaAlias: \"Umbraco.Plain.String\",\r\n            settings: {\r\n                properties: [\r\n                    {\r\n                        \"alias\": \"disabled\",\r\n                        \"label\": \"Disabled\",\r\n                        \"description\": \"Disables the suggestion button\",\r\n                        \"propertyEditorUiAlias\": \"Umb.PropertyEditorUi.Toggle\"\r\n                    },\r\n                    {\r\n                        \"alias\": \"placeholder\",\r\n                        \"label\": \"Placeholder text\",\r\n                        \"description\": \"A nice placeholder description to help out our editor!\",\r\n                        \"propertyEditorUiAlias\": \"Umb.PropertyEditorUi.TextBox\"\r\n                    },\r\n                    {\r\n                        \"alias\": \"maxChars\",\r\n                        \"label\": \"Max characters allowed\",\r\n                        \"description\": \"The maximum number of allowed characters in a suggestion\",\r\n                        \"propertyEditorUiAlias\": \"Umb.PropertyEditorUi.Integer\"\r\n                    },\r\n                    {\r\n                        \"alias\": \"suggestions\",\r\n                        \"label\": \"Suggestions\",\r\n                        \"description\": \"A list of suggestions to suggest\",\r\n                        \"propertyEditorUiAlias\": \"Umb.PropertyEditorUi.TextArea\" \r\n                    }\r\n                ],\r\n                defaultData: [\r\n                    {\r\n                        \"alias\": \"disabled\",\r\n                        \"value\": true\r\n                    },\r\n                    {\r\n                        \"alias\": \"placeholder\",\r\n                        \"value\": \"Write a suggestion\"\r\n                    },\r\n                    {\r\n                        \"alias\": \"maxChars\",\r\n                        \"value\": 50\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n    }\r\n]\r\n\r\nexport const manifests = [...propertyEditors];","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { ManifestTypes } from '@umbraco-cms/backoffice/extension-registry';\r\n\r\nimport { manifests as dashboardManifests } from './dashboards/manifest';\r\nimport { manifests as propertyEditors } from './propertyEditors/manifest';\r\n\r\nconst manifests: Array<ManifestTypes> = [\r\n    ...dashboardManifests,\r\n    ...propertyEditors\r\n];\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n    extensionRegistry.registerMany(manifests);\r\n};"],"names":["dashboards","manifests","propertyEditors","dashboardManifests","onInit","_host","extensionRegistry"],"mappings":"AAEA,MAAMA,IAAuC;AAAA,EACzC;AAAA,IACI,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,IAAI,MAAK,OAAO,iCAAwB;AAAA,IACxC,QAAQ;AAAA,IACR,MAAM;AAAA,MACF,OAAO;AAAA,MACP,UAAU;AAAA,IACd;AAAA,IACA,YAAY;AAAA,MACR;AAAA,QACI,OAAO;AAAA,QACP,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ,GAEaC,IAAY,CAAC,GAAGD,CAAU,GCrBjCE,IAAmD;AAAA,EACrD;AAAA,IACI,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,IAAI,MAAM,OAAO,mCAA0B;AAAA,IAC3C,MAAM;AAAA,MACF,OAAO;AAAA,MACP,MAAM;AAAA,MACN,OAAO;AAAA,MACP,2BAA2B;AAAA,MAC3B,UAAU;AAAA,QACN,YAAY;AAAA,UACR;AAAA,YACI,OAAS;AAAA,YACT,OAAS;AAAA,YACT,aAAe;AAAA,YACf,uBAAyB;AAAA,UAC7B;AAAA,UACA;AAAA,YACI,OAAS;AAAA,YACT,OAAS;AAAA,YACT,aAAe;AAAA,YACf,uBAAyB;AAAA,UAC7B;AAAA,UACA;AAAA,YACI,OAAS;AAAA,YACT,OAAS;AAAA,YACT,aAAe;AAAA,YACf,uBAAyB;AAAA,UAC7B;AAAA,UACA;AAAA,YACI,OAAS;AAAA,YACT,OAAS;AAAA,YACT,aAAe;AAAA,YACf,uBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,UACT;AAAA,YACI,OAAS;AAAA,YACT,OAAS;AAAA,UACb;AAAA,UACA;AAAA,YACI,OAAS;AAAA,YACT,OAAS;AAAA,UACb;AAAA,UACA;AAAA,YACI,OAAS;AAAA,YACT,OAAS;AAAA,UACb;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,GAEaD,IAAY,CAAC,GAAGC,CAAe,GCtDtCD,IAAkC;AAAA,EACpC,GAAGE;AAAAA,EACH,GAAGD;AACP,GAEaE,IAA8B,CAACC,GAAOC,MAAsB;AACrE,EAAAA,EAAkB,aAAaL,CAAS;AAC5C;"}