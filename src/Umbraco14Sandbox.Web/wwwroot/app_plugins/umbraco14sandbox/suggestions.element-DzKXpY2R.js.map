{"version":3,"file":"suggestions.element-DzKXpY2R.js","sources":["../../../../Umbraco14Sandbox.Client/assets/src/propertyEditors/suggestions.element.ts"],"sourcesContent":["import { LitElement, html, css, customElement, property, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbPropertyValueChangeEvent } from \"@umbraco-cms/backoffice/property-editor\";\r\n\r\n\r\n@customElement('punk-suggestions')\r\nexport default class PunkSuggestionsPropertyEditorUIElement extends LitElement {\r\n    @property({ type: String })\r\n    public value = \"\";\r\n\r\n\r\n    #onInput(e: InputEvent) {\r\n        this.value = (e.target as HTMLInputElement).value;\r\n        this.#dispatchChangeEvent();\r\n    }\r\n\r\n    #dispatchChangeEvent() {\r\n        this.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n    }\r\n\r\n    @state()\r\n    private _suggestions = [\r\n      'You should take a break',\r\n      'I suggest that you visit the Eiffel Tower',\r\n      'How about starting a book club today or this week?',\r\n      'Are you hungry?',\r\n    ];\r\n\r\n    #onSuggestion() {\r\n        const randomIndex = (this._suggestions.length * Math.random()) | 0;\r\n        this.value = this._suggestions[randomIndex];\r\n        this.#dispatchChangeEvent();\r\n      }\r\n\r\n    render() {\r\n        return html`\r\n         <uui-input\r\n        id=\"suggestion-input\"\r\n        class=\"element\"\r\n        label=\"text input\"\r\n        .value=${this.value || \"\"}\r\n        @input=${this.#onInput}\r\n      >\r\n      </uui-input>\r\n          <div id=\"wrapper\">\r\n            <uui-button\r\n              id=\"suggestion-button\"\r\n              class=\"element\"\r\n              look=\"primary\"\r\n              label=\"give me suggestions\"\r\n              @click=${this.#onSuggestion}\r\n            >\r\n              Give me suggestions!\r\n            </uui-button>\r\n            <uui-button\r\n              id=\"suggestion-trimmer\"\r\n              class=\"element\"\r\n              look=\"outline\"\r\n              label=\"Trim text\"\r\n            >\r\n              Trim text\r\n            </uui-button>\r\n          </div>\r\n        `;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n          #wrapper {\r\n            margin-top: 10px;\r\n            display: flex;\r\n            gap: 10px;\r\n          }\r\n          .element {\r\n            width: 100%;\r\n          }\r\n        `,\r\n    ];\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'punk-suggestions': PunkSuggestionsPropertyEditorUIElement;\r\n    }\r\n}"],"names":["_PunkSuggestionsPropertyEditorUIElement_instances","onInput_fn","dispatchChangeEvent_fn","onSuggestion_fn","PunkSuggestionsPropertyEditorUIElement","LitElement","__privateAdd","html","__privateMethod","e","UmbPropertyValueChangeEvent","randomIndex","css","__decorateClass","property","state","customElement"],"mappings":";;;;;;;;8OAAAA,GAAAC,GAAAC,GAAAC;AAKqB,IAAAC,IAArB,cAAoEC,EAAW;AAAA,EAA/E,cAAA;AAAA,UAAA,GAAA,SAAA,GAAAC,EAAA,MAAAN,CAAA,GAEI,KAAO,QAAQ,IAaf,KAAQ,eAAe;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EACF;AAAA,EAQA,SAAS;AACE,WAAAO;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKE,KAAK,SAAS,EAAE;AAAA,iBAChBC,QAAKR,GAAQC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBASPO,QAAKR,GAAaG,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcrC;AAcJ;AAxEAH,IAAA,oBAAA,QAAA;AAKIC,IAAQ,SAACQ,GAAe;AACf,OAAA,QAASA,EAAE,OAA4B,OAC5CD,EAAA,MAAKR,GAALE,CAAA,EAAA,KAAA,IAAA;AACJ;AAEAA,IAAoB,WAAG;AACd,OAAA,cAAc,IAAIQ,EAAA,CAA6B;AACxD;AAUAP,IAAa,WAAG;AACZ,QAAMQ,IAAe,KAAK,aAAa,SAAS,KAAK,OAAY,IAAA;AAC5D,OAAA,QAAQ,KAAK,aAAaA,CAAW,GAC1CH,EAAA,MAAKR,GAALE,CAAA,EAAA,KAAA,IAAA;AACF;AA1BeE,EA4DV,SAAS;AAAA,EACZQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUJ;AArEOC,EAAA;AAAA,EADNC,EAAS,EAAE,MAAM,QAAQ;AAAA,GADTV,EAEV,WAAA,SAAA,CAAA;AAaCS,EAAA;AAAA,EADPE,EAAM;AAAA,GAdUX,EAeT,WAAA,gBAAA,CAAA;AAfSA,IAArBS,EAAA;AAAA,EADCG,EAAc,kBAAkB;AAAA,GACZZ,CAAA;"}