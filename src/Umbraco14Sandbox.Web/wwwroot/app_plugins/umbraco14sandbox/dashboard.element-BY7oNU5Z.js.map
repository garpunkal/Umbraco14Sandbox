{"version":3,"file":"dashboard.element-BY7oNU5Z.js","sources":["../../../../Umbraco14Sandbox.Client/assets/src/dashboards/dashboard.element.ts"],"sourcesContent":["\r\nimport { type UmbCurrentUserModel, UMB_CURRENT_USER_CONTEXT } from \"@umbraco-cms/backoffice/current-user\";\r\nimport { LitElement, css, html, customElement, state, repeat, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { type UmbUserDetailModel, UmbUserCollectionRepository } from '@umbraco-cms/backoffice/user';\r\nimport { UserStateModel } from \"@umbraco-cms/backoffice/external/backend-api\";\r\nimport { UUIInterfaceColor, UUIInterfaceLook } from \"@umbraco-cms/backoffice/external/uui\";\r\n\r\n@customElement('punk-dashboard')\r\nexport class PunkDashboard extends UmbElementMixin(LitElement) {\r\n\r\n    @state()\r\n    private _currentUser?: UmbCurrentUserModel;\r\n\r\n    @state()\r\n    private _userData: Array<UmbUserDetailModel> = [];\r\n\r\n    #userRepository = new UmbUserCollectionRepository(this);\r\n\r\n    constructor() {\r\n        super();\r\n        this.consumeContext(UMB_CURRENT_USER_CONTEXT, (instance) => {\r\n            this._observeCurrentUser(instance);\r\n        });\r\n        this._getPagedUserData();\r\n    }\r\n\r\n    private async _observeCurrentUser(instance: typeof UMB_CURRENT_USER_CONTEXT.TYPE) {\r\n        this.observe(instance.currentUser, (currentUser) => {\r\n            this._currentUser = currentUser;\r\n        });\r\n    }\r\n    private async _getPagedUserData() {\r\n        const { data } = await this.#userRepository.requestCollection();\r\n        this._userData = data?.items ?? [];\r\n    }\r\n\r\n\r\n    @property()\r\n    title = 'Punk Dashboard'\r\n\r\n    render() {\r\n        return html`\r\n          <uui-box headline=\"hello world\">\r\n\r\n\r\n                <h1>Welcome ${this._currentUser?.name ?? \"Unknown\"}!</h1>\r\n         \r\n                <uui-button href=\"https://garpunkal.dev\" look=\"primary\" type=\"button\" target=\"_blank\">garpunkal.dev</uui-button>\r\n\r\n                <uui-table id=\"users-wrapper\">\r\n\t\t\t\t<uui-table-row>\r\n\t\t\t\t\t<uui-table-head-cell>Name</uui-table-head-cell>\r\n\t\t\t\t\t<uui-table-head-cell>Email</uui-table-head-cell>\r\n\t\t\t\t\t<uui-table-head-cell>Status</uui-table-head-cell>\r\n\t\t\t\t</uui-table-row>\r\n\t\t\t\t${repeat(this._userData, (user) => user.unique, (user) => this._renderUser(user))}\r\n\t\t\t</uui-table>\r\n\r\n            </uui-box>\r\n        `;\r\n\r\n    }\r\n\r\n\r\n    private _renderUser(user: UmbUserDetailModel) {\r\n        if (!user) return;\r\n        const state = this.getLookAndColorFromUserState(user.state);\r\n        return html`<uui-table-row class=\"user\">\r\n                <uui-table-cell>${user.name}</uui-table-cell>\r\n                <uui-table-cell>${user.email}</uui-table-cell>\r\n                <uui-table-cell><uui-tag look=${state.look} color=${state.color}>${user.state}</uui-tag></uui-table-cell>\r\n            </uui-table-row>`;\r\n    }\r\n\r\n    getLookAndColorFromUserState = (state?: UserStateModel | null): { look: UUIInterfaceLook; color: UUIInterfaceColor } => {\r\n        switch (state) {\r\n            case UserStateModel.INACTIVE:\r\n            case UserStateModel.INVITED:\r\n                return { look: 'primary', color: 'warning' };\r\n            case UserStateModel.ACTIVE:\r\n                return { look: 'primary', color: 'positive' };\r\n            case UserStateModel.DISABLED:\r\n                return { look: 'primary', color: 'danger' };\r\n            default:\r\n                return { look: 'secondary', color: 'default' };\r\n        }\r\n    };\r\n\r\n    static styles = [\r\n        css`\r\n       :host {\r\n\t\t\tdisplay: block;\r\n\t\t\tpadding: var(--uui-size-layout-1);\r\n\t\t}\r\n\r\n\t\tuui-table-head-cell {\r\n\t\t\tfont-weight: bold;\r\n\t\t}\r\n\r\n\t\t.user:hover,\r\n\t\t.user:focus {\r\n\t\t\tcursor: pointer;\r\n\t\t\tbackground-color: var(--uui-color-surface-alt);\r\n\t\t}\r\n    `\r\n    ];\r\n}\r\n\r\n\r\nexport default PunkDashboard;\r\n\r\ndeclare global {\r\n    interface HtmlElementTagNameMap {\r\n        'punk-dashboard': PunkDashboard\r\n    }\r\n}"],"names":["_userRepository","PunkDashboard","UmbElementMixin","LitElement","__privateAdd","UmbUserCollectionRepository","state","UserStateModel","UMB_CURRENT_USER_CONTEXT","instance","currentUser","data","__privateGet","html","_a","repeat","user","css","__decorateClass","property","customElement","PunkDashboard$1"],"mappings":";;;;;;;;;;;uQAAAA;AASO,IAAMC,IAAN,cAA4BC,EAAgBC,CAAU,EAAE;AAAA,EAU3D,cAAc;AACJ,aALV,KAAQ,YAAuC,IAE7BC,EAAA,MAAAJ,GAAA,IAAIK,EAA4B,IAAI,CAAA,GAsB9C,KAAA,QAAA,kBAoCR,KAAA,+BAA+B,CAACC,MAAwF;AACpH,cAAQA,GAAO;AAAA,QACX,KAAKC,EAAe;AAAA,QACpB,KAAKA,EAAe;AAChB,iBAAO,EAAE,MAAM,WAAW,OAAO,UAAU;AAAA,QAC/C,KAAKA,EAAe;AAChB,iBAAO,EAAE,MAAM,WAAW,OAAO,WAAW;AAAA,QAChD,KAAKA,EAAe;AAChB,iBAAO,EAAE,MAAM,WAAW,OAAO,SAAS;AAAA,QAC9C;AACI,iBAAO,EAAE,MAAM,aAAa,OAAO,UAAU;AAAA,MACrD;AAAA,IAAA,GAjEK,KAAA,eAAeC,GAA0B,CAACC,MAAa;AACxD,WAAK,oBAAoBA,CAAQ;AAAA,IAAA,CACpC,GACD,KAAK,kBAAkB;AAAA,EAC3B;AAAA,EAEA,MAAc,oBAAoBA,GAAgD;AAC9E,SAAK,QAAQA,EAAS,aAAa,CAACC,MAAgB;AAChD,WAAK,eAAeA;AAAA,IAAA,CACvB;AAAA,EACL;AAAA,EACA,MAAc,oBAAoB;AAC9B,UAAM,EAAE,MAAAC,EAAK,IAAI,MAAMC,EAAA,MAAKZ,GAAgB;AACvC,SAAA,aAAYW,KAAA,gBAAAA,EAAM,UAAS,CAAA;AAAA,EACpC;AAAA,EAMA,SAAS;;AACE,WAAAE;AAAA;AAAA;AAAA;AAAA,gCAIeC,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,SAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAU5DC,EAAO,KAAK,WAAW,CAACC,MAASA,EAAK,QAAQ,CAACA,MAAS,KAAK,YAAYA,CAAI,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMjF;AAAA,EAGQ,YAAYA,GAA0B;AAC1C,QAAI,CAACA,EAAM;AACX,UAAMV,IAAQ,KAAK,6BAA6BU,EAAK,KAAK;AACnD,WAAAH;AAAA,kCACmBG,EAAK,IAAI;AAAA,kCACTA,EAAK,KAAK;AAAA,gDACIV,EAAM,IAAI,UAAUA,EAAM,KAAK,IAAIU,EAAK,KAAK;AAAA;AAAA,EAEzF;AAkCJ;AA1FIhB,IAAA,oBAAA,QAAA;AARSC,EAgFF,SAAS;AAAA,EACZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBJ;AA9FQC,EAAA;AAAA,EADPZ,EAAM;AAAA,GAFEL,EAGD,WAAA,gBAAA,CAAA;AAGAiB,EAAA;AAAA,EADPZ,EAAM;AAAA,GALEL,EAMD,WAAA,aAAA,CAAA;AAwBRiB,EAAA;AAAA,EADCC,EAAS;AAAA,GA7BDlB,EA8BT,WAAA,SAAA,CAAA;AA9BSA,IAANiB,EAAA;AAAA,EADNE,EAAc,gBAAgB;AAAA,GAClBnB,CAAA;AAqGb,MAAAoB,IAAepB;"}